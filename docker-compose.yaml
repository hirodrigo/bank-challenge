version: '3.8'

services:
  zookeeper:
    image: "confluentinc/cp-zookeeper:5.2.1"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2

  kafka:
    image: "confluentinc/cp-kafka:5.2.1"
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
  
  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:latest
    ports:
      - "8090:8080"
    environment:
      KAFKA_BROKERS: kafka:29092
    depends_on:
      - kafka

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - "./src/main/resources/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "prometheus-volume:/etc/prometheus/"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:9.5.15
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-volume:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "3000" ]
  
  api-cliente:
    build:
      context: ./api-cliente
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      KAFKA_HOST: "kafka:29092"
    depends_on:
      - kafka
      - prometheus
      - grafana
  
  bank-challenge:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8089:8081"
    environment:
      CUSTOMER_SERVICE_URL: "api-cliente:8082"
    depends_on:
      - api-cliente
      - kafka
      - prometheus
      - grafana

volumes:
  grafana-volume:
  prometheus-volume:
  